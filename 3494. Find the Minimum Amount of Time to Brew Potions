class Solution {
    public long minTime(int[] skill, int[] mana) {
        int n = skill.length;
        int m = mana.length;

        long[] prefixSkill = new long[n];
        prefixSkill[0] = skill[0];
        for (int i = 1; i < n; i++) {
            prefixSkill[i] = prefixSkill[i - 1] + skill[i];
        }

        long potionStartTime = 0;

        for (int j = 1; j < m; j++) {
            long maxShift = Long.MIN_VALUE;
            long prevMana = mana[j - 1];
            long currentMana = mana[j];

            for (int i = 0; i < n; i++) {
                long prevPrefixSkill = (i == 0) ? 0 : prefixSkill[i - 1];
                long shiftTerm = prefixSkill[i] * prevMana - prevPrefixSkill * currentMana;
                
                if (shiftTerm > maxShift) {
                    maxShift = shiftTerm;
                }
            }
            
            potionStartTime += maxShift;
        }

        long totalTime = potionStartTime + prefixSkill[n - 1] * mana[m - 1];
        
        return totalTime;
    }
}
